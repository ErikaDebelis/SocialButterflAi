// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SocialButterFlAi.Data.Analysis;

#nullable disable

namespace SocialButterflAi.Data.Analysis.Migrations
{
    [DbContext(typeof(AnalysisDbContext))]
    [Migration("20241211220236_0_initial")]
    partial class _0_initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "hstore");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SocialButterFlAi.Data.Analysis.Entities.Analysis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CaptionId")
                        .HasColumnType("uuid");

                    b.Property<double>("Certainty")
                        .HasColumnType("double precision");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmotionalContext")
                        .HasColumnType("text");

                    b.Property<string>("EnhancedDescription")
                        .HasColumnType("text");

                    b.Property<Dictionary<string, string>>("Metadata")
                        .HasColumnType("hstore");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NonVerbalCues")
                        .HasColumnType("text");

                    b.Property<Guid>("VideoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CaptionId");

                    b.HasIndex("VideoId");

                    b.ToTable("Analyses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("41aea377-95ff-420a-a77c-3b274a1bdc2b"),
                            CaptionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Certainty = 0.0,
                            CreatedBy = "Test",
                            CreatedOn = new DateTime(2024, 12, 11, 22, 2, 36, 319, DateTimeKind.Utc).AddTicks(6204),
                            ModifiedBy = "Test",
                            ModifiedOn = new DateTime(2024, 12, 11, 22, 2, 36, 319, DateTimeKind.Utc).AddTicks(6205),
                            VideoId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Analysis.Entities.EnhancedCaption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BackgroundContext")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("interval");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SoundEffects")
                        .HasColumnType("text");

                    b.Property<string>("StandardText")
                        .HasColumnType("text");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval");

                    b.Property<Guid>("VideoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VideoId");

                    b.ToTable("Captions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f175ab9-998b-40af-aca0-c21c38273ce7"),
                            CreatedBy = "Test",
                            CreatedOn = new DateTime(2024, 12, 11, 22, 2, 36, 319, DateTimeKind.Utc).AddTicks(6193),
                            EndTime = new TimeSpan(0, 0, 0, 0, 0),
                            ModifiedBy = "Test",
                            ModifiedOn = new DateTime(2024, 12, 11, 22, 2, 36, 319, DateTimeKind.Utc).AddTicks(6193),
                            StartTime = new TimeSpan(0, 0, 0, 0, 0),
                            VideoId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Analysis.Entities.Video", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<Guid>("IdentityId")
                        .HasColumnType("uuid");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("VideoType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("IdentityId");

                    b.ToTable("Video");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6fb87597-28e6-4cd7-b747-03e5c3f64aec"),
                            ChatId = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedBy = "Test",
                            CreatedOn = new DateTime(2024, 12, 11, 22, 2, 36, 319, DateTimeKind.Utc).AddTicks(6179),
                            Duration = new TimeSpan(0, 0, 0, 0, 0),
                            IdentityId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedBy = "Test",
                            ModifiedOn = new DateTime(2024, 12, 11, 22, 2, 36, 319, DateTimeKind.Utc).AddTicks(6183),
                            VideoType = "unknown"
                        });
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Chat.Entities.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ChatStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Chat", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Chat.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FromIdentityId")
                        .HasColumnType("uuid");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Dictionary<string, string>>("Metadata")
                        .HasColumnType("hstore");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<Guid>("ToIdentityId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("FromIdentityId");

                    b.HasIndex("ToIdentityId");

                    b.ToTable("Message", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Identity.Entities.Identity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("StopDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Identity", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Identity.Entities.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("IdentityId")
                        .HasColumnType("uuid");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PreferredName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Profile", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Identity.Entities.ProfilePronounChoice", b =>
                {
                    b.Property<Guid>("PronounChoiceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uuid");

                    b.HasKey("PronounChoiceId", "ProfileId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfilePronounChoice", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Identity.Entities.PronounChoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Pronoun")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PronounChoice", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Analysis.Entities.Analysis", b =>
                {
                    b.HasOne("SocialButterFlAi.Data.Analysis.Entities.EnhancedCaption", "Caption")
                        .WithMany("Analyses")
                        .HasForeignKey("CaptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocialButterFlAi.Data.Analysis.Entities.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caption");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Analysis.Entities.EnhancedCaption", b =>
                {
                    b.HasOne("SocialButterFlAi.Data.Analysis.Entities.Video", "Video")
                        .WithMany("Captions")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Video");
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Analysis.Entities.Video", b =>
                {
                    b.HasOne("SocialButterFlAi.Data.Chat.Entities.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocialButterFlAi.Data.Identity.Entities.Identity", "Identity")
                        .WithMany()
                        .HasForeignKey("IdentityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Identity");
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Chat.Entities.Message", b =>
                {
                    b.HasOne("SocialButterFlAi.Data.Chat.Entities.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocialButterFlAi.Data.Identity.Entities.Identity", "FromIdentity")
                        .WithMany()
                        .HasForeignKey("FromIdentityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocialButterFlAi.Data.Identity.Entities.Identity", "ToIdentity")
                        .WithMany()
                        .HasForeignKey("ToIdentityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("FromIdentity");

                    b.Navigation("ToIdentity");
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Identity.Entities.Profile", b =>
                {
                    b.HasOne("SocialButterFlAi.Data.Identity.Entities.Identity", "Identity")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Identity");
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Identity.Entities.ProfilePronounChoice", b =>
                {
                    b.HasOne("SocialButterFlAi.Data.Identity.Entities.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocialButterFlAi.Data.Identity.Entities.PronounChoice", "PronounChoice")
                        .WithMany()
                        .HasForeignKey("PronounChoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("PronounChoice");
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Analysis.Entities.EnhancedCaption", b =>
                {
                    b.Navigation("Analyses");
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Analysis.Entities.Video", b =>
                {
                    b.Navigation("Captions");
                });

            modelBuilder.Entity("SocialButterFlAi.Data.Chat.Entities.Chat", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
